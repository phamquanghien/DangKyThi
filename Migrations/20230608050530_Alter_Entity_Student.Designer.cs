// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyCaThi.Data;

#nullable disable

namespace QuanLyCaThi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230608050530_Alter_Entity_Student")]
    partial class Alter_Entity_Student
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("QuanLyCaThi.Models.ExamTime", b =>
                {
                    b.Property<Guid>("ExamTimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExamTimeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FinishTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFull")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegistedValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("ExamTimeID");

                    b.HasIndex("SubjectID");

                    b.ToTable("ExamTimes");
                });

            modelBuilder.Entity("QuanLyCaThi.Models.ListRegisted", b =>
                {
                    b.Property<Guid>("ListRegistedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExamTimeID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("ListRegistedID");

                    b.HasIndex("ExamTimeID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectID");

                    b.ToTable("ListRegisteds");
                });

            modelBuilder.Entity("QuanLyCaThi.Models.Student", b =>
                {
                    b.Property<Guid>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentID");

                    b.HasIndex("SubjectID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("QuanLyCaThi.Models.Subject", b =>
                {
                    b.Property<Guid>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("QuanLyCaThi.Models.ExamTime", b =>
                {
                    b.HasOne("QuanLyCaThi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("QuanLyCaThi.Models.ListRegisted", b =>
                {
                    b.HasOne("QuanLyCaThi.Models.ExamTime", "ExamTime")
                        .WithMany()
                        .HasForeignKey("ExamTimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCaThi.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCaThi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamTime");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("QuanLyCaThi.Models.Student", b =>
                {
                    b.HasOne("QuanLyCaThi.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });
#pragma warning restore 612, 618
        }
    }
}
